[gd_scene load_steps=14 format=4 uid="uid://bgsdn0gxce0qu"]

[ext_resource type="Script" uid="uid://c33xq7cbuoo4e" path="res://addons/src/scripts/line_renderer.gd" id="3_hnrfe"]
[ext_resource type="Material" uid="uid://d33aomc1mqhjj" path="res://addons/src/materials/lines.tres" id="4_jynqk"]
[ext_resource type="Script" uid="uid://j2587uk10gou" path="res://addons/src/scripts/portal.gd" id="6_po85p"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ilqnf"]
resource_name = "Material.004"
cull_mode = 2
vertex_color_use_as_albedo = true
albedo_color = Color(0.906332, 0.0186099, 0, 1)
roughness = 0.5

[sub_resource type="ArrayMesh" id="ArrayMesh_tq116"]
_surfaces = [{
"aabb": AABB(-0.350332, -1, -0.372583, 0.700664, 2, 0.745177),
"format": 34359742465,
"index_count": 36,
"index_data": PackedByteArray("AAADAAEAAAACAAMAAgAHAAMAAgAGAAcABgAFAAcABgAEAAUABAABAAUABAAAAAEAAgAEAAYAAgAAAAQABwABAAMABwAFAAEA"),
"name": "Material.004",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 8,
"vertex_data": PackedByteArray("sF6zvgAAgL9Aw74+sF6zvgAAgD9Aw74+sF6zvgAAgL9Aw76+sF6zvgAAgD9Aw76+sF6zPgAAgL9Aw74+sF6zPgAAgD9Aw74+sF6zPgAAgL9Aw76+sF6zPgAAgD9Aw76+")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_y1jeg"]
resource_name = "room_Cube_002"
_surfaces = [{
"aabb": AABB(-0.350332, -1, -0.372583, 0.700664, 2, 0.745177),
"attribute_data": PackedByteArray("AADAPgAAgD8AAAA+AACAPgAAwD4AAAAAAAAgPwAAgD8AACA/AAAAAAAAYD8AAIA+AADAPgAAQD8AAAA+AAAAPwAAwD4AAEA/AAAgPwAAQD8AACA/AABAPwAAYD8AAAA/AADAPgAAgD4AAMA+AACAPgAAwD4AAIA+AAAgPwAAgD4AACA/AACAPgAAID8AAIA+AADAPgAAAD8AAMA+AAAAPwAAwD4AAAA/AAAgPwAAAD8AACA/AAAAPwAAID8AAAA/"),
"format": 34359742487,
"index_count": 36,
"index_data": PackedByteArray("AAAJAAMAAAAGAAkACAAVAAoACAATABUAFAARABcAFAAOABEADQAEAA8ADQACAAQABwAMABIABwABAAwAFgAFAAsAFgAQAAUA"),
"material": SubResource("StandardMaterial3D_ilqnf"),
"name": "Material.004",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 24,
"vertex_data": PackedByteArray("sF6zvgAAgL9Aw74+sF6zvgAAgL9Aw74+sF6zvgAAgL9Aw74+sF6zvgAAgD9Aw74+sF6zvgAAgD9Aw74+sF6zvgAAgD9Aw74+sF6zvgAAgL9Aw76+sF6zvgAAgL9Aw76+sF6zvgAAgL9Aw76+sF6zvgAAgD9Aw76+sF6zvgAAgD9Aw76+sF6zvgAAgD9Aw76+sF6zPgAAgL9Aw74+sF6zPgAAgL9Aw74+sF6zPgAAgL9Aw74+sF6zPgAAgD9Aw74+sF6zPgAAgD9Aw74+sF6zPgAAgD9Aw74+sF6zPgAAgL9Aw76+sF6zPgAAgL9Aw76+sF6zPgAAgL9Aw76+sF6zPgAAgD9Aw76+sF6zPgAAgD9Aw76+sF6zPgAAgD9Aw76+AAD/f/9/////fwAA////v/9//3//f///AAD/f/9/////f/9//3////9///8AAP+/AAD/f/9/////fwAA////v///////f///AAD/f/9//////////3////9///8AAP+//38AAP///7//f/9//3///////3//f////3//f/9/////f///AAD/v////3//f////38AAP///7///////3///////3//f/////////9/////f///AAD/v////3//f///")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_tq116")

[sub_resource type="GDScript" id="GDScript_1sy50"]
script/source = "\"\"\"
	Asset: Godot Simple Portal System
	File: player.gd
	Description: Simple controllable player with raycaster.
	Repository: https://github.com/Donitzo/godot-simple-portal-system
	License: CC0 License
\"\"\"

extends MeshInstance3D

const _MOUSE_PAN_THRESHOLD:float = 0.4;
const _MOUSE_PAN_SPEED:float = 200

const _MOVE_SPEED:float = 4

var _mouse_look:Vector2

@onready var _line_renderer:LineRenderer = $\"../LineRenderer\"
@onready var _camera:Camera3D = $Camera
@onready var _pip_camera:Camera3D = $PipViewport1/Camera

@onready var _handle_raycast_callable:Callable = Callable(self, \"_handle_raycast\")

func _ready() -> void:
	set_layer_mask_value(1, false)
	set_layer_mask_value(2, true)

	_camera.set_cull_mask_value(2, false)

func _process(delta:float) -> void:
	var viewport:Viewport = get_viewport()
	var mouse_position:Vector2 = viewport.get_mouse_position()
	var viewport_size:Vector2i = viewport.size
	var normalized_mouse_position:Vector2 = mouse_position / Vector2(viewport_size)

	var horizontal_speed:float  = 0
	var vertical_speed:float = 0
	
	if normalized_mouse_position.x > 0 and normalized_mouse_position.x < 1 and\\
		normalized_mouse_position.y > 0 and normalized_mouse_position.y < 1:
		if normalized_mouse_position.x < _MOUSE_PAN_THRESHOLD:
			horizontal_speed = lerp(0, 1, _MOUSE_PAN_THRESHOLD - normalized_mouse_position.x)
		elif normalized_mouse_position.x > 1 - _MOUSE_PAN_THRESHOLD:
			horizontal_speed = lerp(0, -1, normalized_mouse_position.x - (1.0 - _MOUSE_PAN_THRESHOLD))
		if normalized_mouse_position.y < _MOUSE_PAN_THRESHOLD:
			vertical_speed = lerp(0, 1, _MOUSE_PAN_THRESHOLD - normalized_mouse_position.y)
		elif normalized_mouse_position.y > 1 - _MOUSE_PAN_THRESHOLD:
			vertical_speed = lerp(0, -1, normalized_mouse_position.y - (1.0 - _MOUSE_PAN_THRESHOLD))

	_mouse_look.x = fmod(_mouse_look.x + horizontal_speed * _MOUSE_PAN_SPEED * delta + 360, 360)
	_mouse_look.y = clamp(_mouse_look.y + vertical_speed * _MOUSE_PAN_SPEED * delta, -80, 80)
	
	rotation_degrees = Vector3(0, _mouse_look.x, 0)
	_camera.rotation_degrees = Vector3(_mouse_look.y, 0, 0)
	
	var right:Vector3 = (global_transform.basis.x * Vector3(1, 0, 1)).normalized()
	var forward:Vector3 = (global_transform.basis.z * Vector3(1, 0, 1)).normalized()

	if Input.is_key_pressed(KEY_LEFT) or Input.is_key_pressed(KEY_A):
		global_translate(-right * _MOVE_SPEED * delta)
	if Input.is_key_pressed(KEY_RIGHT) or Input.is_key_pressed(KEY_D):
		global_translate(right * _MOVE_SPEED * delta)
	if Input.is_key_pressed(KEY_UP) or Input.is_key_pressed(KEY_W):
		global_translate(-forward * _MOVE_SPEED * delta)
	if Input.is_key_pressed(KEY_DOWN) or Input.is_key_pressed(KEY_S):
		global_translate(forward * _MOVE_SPEED * delta)

	if abs(position.z) > 4.4:
		position.x = clamp(position.x, -0.75, 0.75)
		if abs(position.z) > 7.1:
			position.z -= 7.1 * 2 * sign(position.z)
	else:
		position.x = clamp(position.x, -3.8, 3.8)
		if abs(position.x) > 0.75:
			position.z = clamp(position.z, -3.8, 3.8)
	
	_pip_camera.global_position = _camera.to_global(Vector3(0, 1.5, 1.5))
	_pip_camera.global_rotation = _camera.global_rotation
	
	var origin:Vector3 = _camera.project_ray_origin(mouse_position)
	var end:Vector3 = origin + _camera.project_ray_normal(mouse_position) * 100

	_line_renderer.clear_lines()
	
	Portal.raycast(get_tree(), origin, (end - origin).normalized(), _handle_raycast_callable)

func _handle_raycast(from:Vector3, dir:Vector3, segment_distance:float, _recursive_distance:float, recursions:int) -> bool:
	var distance:float = min(100, segment_distance)
	var target:Vector3 = from + dir * distance

	_line_renderer.add_line(from, target, Color.GREEN)
	for i in 16:
		_line_renderer.add_line(target, target + Vector3(
			randf_range(-0.1, 0.1), 
			randf_range(-0.1, 0.1), 
			randf_range(-0.1, 0.1)), Color.RED)
		if recursions > 0:
			_line_renderer.add_line(from, from + Vector3(
				randf_range(-0.1, 0.1), 
				randf_range(-0.1, 0.1), 
				randf_range(-0.1, 0.1)), Color.BLUE)

	var space_state:PhysicsDirectSpaceState3D = get_world_3d().direct_space_state
	var query:PhysicsRayQueryParameters3D = PhysicsRayQueryParameters3D.create(from, from + dir * distance)
	var result:Dictionary = space_state.intersect_ray(query)
	if not result.is_empty() and result.collider is Hoverable:
		result.collider.hovered = true
		for i in 16:
			_line_renderer.add_line(result.position, result.position + Vector3(
				randf_range(-0.1, 0.1), 
				randf_range(-0.1, 0.1), 
				randf_range(-0.1, 0.1)), Color.GREEN)
		
		return true
		
	return false
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_k7ub3"]

[sub_resource type="ArrayMesh" id="ArrayMesh_rc17g"]
_surfaces = [{
"aabb": AABB(-1.02429, -1.3, 0, 2.04857, 2.60001, 1e-05),
"format": 34359742465,
"index_count": 6,
"index_data": PackedByteArray("AwABAAAAAwAAAAIA"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 4,
"vertex_data": PackedByteArray("1huDv2Rmpj8AAACA0huDv2Zmpr8AAACA1huDP2Zmpj8AAACA0huDP2Zmpr8AAACA")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_elhom"]
resource_name = "room_Plane_001"
_surfaces = [{
"aabb": AABB(-1.02429, -1.3, 0, 2.04857, 2.60001, 1e-05),
"attribute_data": PackedByteArray("AAAAAAAAgD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAgD8="),
"format": 34359742487,
"index_count": 6,
"index_data": PackedByteArray("AwABAAAAAwAAAAIA"),
"material": SubResource("StandardMaterial3D_k7ub3"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 4,
"vertex_data": PackedByteArray("1huDv2Rmpj8AAACA0huDv2Zmpr8AAACA1huDP2Zmpj8AAACA0huDP2Zmpr8AAACA/3//f////z//f/9/////P/9//3////8//3//f////z8=")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_rc17g")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_0cgtj"]

[sub_resource type="ArrayMesh" id="ArrayMesh_gfqij"]
_surfaces = [{
"aabb": AABB(-1.02429, -1.3, 0, 2.04857, 2.60001, 1e-05),
"format": 34359742465,
"index_count": 6,
"index_data": PackedByteArray("AwABAAAAAwAAAAIA"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 4,
"vertex_data": PackedByteArray("1huDv2Rmpj8AAACA0huDv2Zmpr8AAACA1huDP2Zmpj8AAACA0huDP2Zmpr8AAACA")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_essa0"]
resource_name = "room_Plane_002"
_surfaces = [{
"aabb": AABB(-1.02429, -1.3, 0, 2.04857, 2.60001, 1e-05),
"attribute_data": PackedByteArray("AAAAAAAAgD8AAAAAAACAPwAAAAAAAIA/AAAAAAAAgD8="),
"format": 34359742487,
"index_count": 6,
"index_data": PackedByteArray("AwABAAAAAwAAAAIA"),
"material": SubResource("StandardMaterial3D_0cgtj"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 4,
"vertex_data": PackedByteArray("1huDv2Rmpj8AAACA0huDv2Zmpr8AAACA1huDP2Zmpj8AAACA0huDP2Zmpr8AAACA/3//f////z//f/9/////P/9//3////8//3//f////z8=")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_gfqij")

[node name="Node3D" type="Node3D"]

[node name="LineRenderer" type="MeshInstance3D" parent="."]
script = ExtResource("3_hnrfe")
material = ExtResource("4_jynqk")

[node name="portal_player" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.00502, 0)
visible = false
mesh = SubResource("ArrayMesh_y1jeg")
skeleton = NodePath("")
script = SubResource("GDScript_1sy50")

[node name="Camera" type="Camera3D" parent="portal_player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.494978, 0)
fov = 60.0

[node name="PipViewport1" type="SubViewport" parent="portal_player"]

[node name="Camera" type="Camera3D" parent="portal_player/PipViewport1"]
transform = Transform3D(0.973495, 0, 0.228708, 0, 1, 0, -0.228708, 0, 0.973495, 0.88632, 1.5, 0)

[node name="PipViewport2" type="SubViewport" parent="."]

[node name="Camera" type="Camera3D" parent="PipViewport2"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 5.575, 0)
fov = 120.0

[node name="CorridorPortalA" type="MeshInstance3D" parent="." node_paths=PackedStringArray("exit_portal")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000144124, 1.3, -7.15)
mesh = SubResource("ArrayMesh_elhom")
skeleton = NodePath("")
script = ExtResource("6_po85p")
disable_viewport_distance = 500.0
fade_out_distance_max = 1000.0
fade_out_distance_min = 100.0
fade_out_color = Color(0, 0, 0, 1)
exit_portal = NodePath("../CorridorPortalB")

[node name="CorridorPortalB" type="MeshInstance3D" parent="." node_paths=PackedStringArray("exit_portal")]
transform = Transform3D(-1, 0, 1.50996e-07, 0, 1, 0, -1.50996e-07, 0, -1, -0.000144124, 1.3, 7.15)
mesh = SubResource("ArrayMesh_essa0")
skeleton = NodePath("")
script = ExtResource("6_po85p")
disable_viewport_distance = 500.0
fade_out_distance_max = 1000.0
fade_out_distance_min = 100.0
fade_out_color = Color(0, 0, 0, 1)
exit_portal = NodePath("../CorridorPortalA")
